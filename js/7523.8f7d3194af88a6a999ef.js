"use strict";(self.webpackChunkkeeptrack_space=self.webpackChunkkeeptrack_space||[]).push([[7523],{7523:(t,r,a)=>{a.r(r),a.d(r,{Atmosphere:()=>i});var i=function(){function t(t,r,a,i){a.enableLimitedUI||a.isDrawLess||(this.gl=t,this.earth=r,this.glm=i,this.settingsManager=a,this.shaderCode={frag:"#version 300 es\n          precision highp float;        \n    \n          uniform vec3 u_lightDirection;\n          in vec3 v_normal;\n          in float v_dist;\n  \n          out vec4 fragColor;\n    \n          void main () {\n              float sunAmount = max(dot(v_normal, u_lightDirection), 0.1);\n              float darkAmount = max(dot(v_normal, -u_lightDirection), 0.0);\n              float a4 = pow(1.3 - v_dist / 2.0, 1.1) * 2.0;\n              float r = 1.0 - sunAmount;\n              float g = max(1.0 - sunAmount, 0.75) - darkAmount;\n              float b = max(sunAmount, 0.8) - darkAmount;\n              float a1 = min(sunAmount, 0.8) * 2.0;\n              float a2 = min(pow(darkAmount / 1.15, 2.0),0.2);\n              float a3 = pow(v_dist,2.0) * -1.0 + 1.2;\n              float a = min(a1 - a2, a3) * a4;\n              fragColor    = vec4(vec3(r,g,b), a);\n          }\n          ",vert:"#version 300 es\n          in vec3 position;\n          in vec3 normal;\n    \n          uniform mat4 u_pMatrix;\n          uniform mat4 u_camMatrix;\n          uniform mat4 u_mvMatrix;\n          uniform mat3 u_nMatrix;\n    \n          out vec3 v_normal;\n          out float v_dist;\n    \n          void main(void) {\n              vec4 position1 = u_camMatrix * u_mvMatrix * vec4(position, 1.0);\n              vec4 position0 = u_camMatrix * u_mvMatrix * vec4(vec3(0.0,0.0,0.0), 1.0);\n              gl_Position = u_pMatrix * position1;\n              v_dist = distance(position0.xz,position1.xz) / "+a.atmosphereSize+".0;\n              v_normal = normalize( u_nMatrix * normal );\n          }\n          "},this.numLatSegs=64,this.numLonSegs=64,this.drawPosition=[0,0,0],this.init(t),this.loaded=!0)}return t.prototype.init=function(t){var r=t.createProgram();if(r.vertShader=t.createShader(t.VERTEX_SHADER),t.shaderSource(r.vertShader,this.shaderCode.vert),t.compileShader(r.vertShader),r.fragShader=t.createShader(t.FRAGMENT_SHADER),t.shaderSource(r.fragShader,this.shaderCode.frag),t.compileShader(r.fragShader),t.attachShader(r,r.vertShader),t.attachShader(r,r.fragShader),t.linkProgram(r),!t.getProgramParameter(r,t.LINK_STATUS)){var a=t.getProgramInfoLog(r);throw new Error("Could not compile WebGL program. \n\n"+a)}this.program=r,this.program.aVertexPosition=t.getAttribLocation(this.program,"position"),this.program.aVertexNormal=t.getAttribLocation(this.program,"normal"),this.program.u_pMatrix=t.getUniformLocation(this.program,"u_pMatrix"),this.program.u_camMatrix=t.getUniformLocation(this.program,"u_camMatrix"),this.program.u_mvMatrix=t.getUniformLocation(this.program,"u_mvMatrix"),this.program.u_nMatrix=t.getUniformLocation(this.program,"u_nMatrix"),this.program.u_lightDirection=t.getUniformLocation(this.program,"u_lightDirection");for(var i=[],e=[],n=[],o=0;o<=this.numLatSegs;o++)for(var s=Math.PI/this.numLatSegs*o-Math.PI/2,h=Math.cos(Math.abs(s)),m=Math.sin(s),u=0;u<=this.numLonSegs;u++){var f=2*Math.PI/this.numLonSegs*u,g=Math.cos(f)*h,p=Math.sin(f)*h,v=1-o/this.numLatSegs,l=.5+u/this.numLonSegs;i.push(g*this.settingsManager.atmosphereSize),i.push(p*this.settingsManager.atmosphereSize),i.push(m*this.settingsManager.atmosphereSize),n.push(l),n.push(v),e.push(g),e.push(p),e.push(m)}var c=[];for(o=0;o<this.numLatSegs;o++)for(u=0;u<this.numLonSegs;u++){var d=o*(this.numLonSegs+1)+u,_=d+1,x=(o+1)*(this.numLonSegs+1)+u,A=x+1;c.push(d),c.push(_),c.push(x),c.push(x),c.push(A),c.push(_)}this.buffers={},this.buffers.vertCount=c.length,this.buffers.vertPosBuf=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.buffers.vertPosBuf),t.bufferData(t.ARRAY_BUFFER,new Float32Array(i),t.STATIC_DRAW),this.buffers.vertNormBuf=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.buffers.vertNormBuf),t.bufferData(t.ARRAY_BUFFER,new Float32Array(e),t.STATIC_DRAW),this.buffers.vertIndexBuf=t.createBuffer(),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.buffers.vertIndexBuf),t.bufferData(t.ELEMENT_ARRAY_BUFFER,new Uint16Array(c),t.STATIC_DRAW),this.vao=t.createVertexArray(),t.bindVertexArray(this.vao),t.bindBuffer(t.ARRAY_BUFFER,this.buffers.vertPosBuf),t.enableVertexAttribArray(this.program.aVertexPosition),t.vertexAttribPointer(this.program.aVertexPosition,3,t.FLOAT,!1,0,0),t.bindBuffer(t.ARRAY_BUFFER,this.buffers.vertNormBuf),t.enableVertexAttribArray(this.program.aVertexNormal),t.vertexAttribPointer(this.program.aVertexNormal,3,t.FLOAT,!1,0,0),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.buffers.vertIndexBuf),t.bindVertexArray(null)},t.prototype.draw=function(t,r){if(this.loaded){var a=this.gl;a.enable(a.BLEND),a.disable(a.DEPTH_TEST),a.blendFunc(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA),a.useProgram(this.program),a.bindVertexArray(this.vao),this.update(r.camPitch),a.uniformMatrix3fv(this.program.u_nMatrix,!1,this.nMatrix),a.uniformMatrix4fv(this.program.u_mvMatrix,!1,this.mvMatrix),a.uniformMatrix4fv(this.program.u_pMatrix,!1,t),a.uniformMatrix4fv(this.program.u_camMatrix,!1,r.camMatrix),a.uniform3fv(this.program.u_lightDirection,this.earth.lightDirection),a.drawElements(a.TRIANGLES,this.buffers.vertCount,a.UNSIGNED_SHORT,0),a.bindVertexArray(null),a.disable(a.BLEND),a.enable(a.DEPTH_TEST)}},t.prototype.update=function(t){this.mvMatrix=this.glm.mat4.create(),this.glm.mat4.identity(this.mvMatrix),this.glm.mat4.rotateY(this.mvMatrix,this.mvMatrix,Math.PI/180*90-t),this.glm.mat4.translate(this.mvMatrix,this.mvMatrix,[0,0,0]),this.nMatrix=this.glm.mat3.create(),this.glm.mat3.normalFromMat4(this.nMatrix,this.mvMatrix)},t}()}}]);