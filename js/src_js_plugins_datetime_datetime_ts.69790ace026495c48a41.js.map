{"version":3,"file":"src_js_plugins_datetime_datetime_ts.69790ace026495c48a41.js","mappings":";;;;;;;;;;;;;;;;AAAA,4BAA4B,SAAI,IAAI,SAAI;AACxC,iCAAiC,uCAAuC,YAAY,KAAK,OAAO;AAChG;AACA;AACuB;AACgC;AAChD;AACP,aAAa,0EAAqB;AAClC;AACA,IAAI,0EAAqB;AACzB;AACA;AACA;AACA;AACA,YAAY,6CAAC,wBAAwB,sEAAiB;AACtD,YAAY,6CAAC;AACb;AACA;AACA,gBAAgB,wFAAmC;AACnD,aAAa;AACb,YAAY,6CAAC;AACb,mCAAmC,6CAAC;AACpC;AACA;AACA,gBAAgB,6CAAC;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0GAAqD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,6CAAC;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD,aAAa;AACb;AACA;AACA,gBAAgB,6CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY,6CAAC;AACb;AACA;AACA,oBAAoB,6CAAC;AACrB,oBAAoB,6CAAC;AACrB;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL,IAAI,0EAAqB;AACzB;AACA;AACA;AACA,YAAY,6CAAC;AACb,SAAS;AACT,KAAK;AACL;AACA","sources":["webpack://keeptrack.space/./src/js/plugins/datetime/datetime.ts"],"sourcesContent":["var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nimport $ from 'jquery';\nimport { keepTrackApi } from '@app/js/api/externalApi';\nexport var init = function () {\n    var _a = keepTrackApi.programs, settingsManager = _a.settingsManager, timeManager = _a.timeManager, satSet = _a.satSet, uiManager = _a.uiManager;\n    // Add HTML\n    keepTrackApi.register({\n        method: 'uiManagerInit',\n        cbName: 'datetime',\n        cb: function () {\n            // Bottom Icon\n            $('#nav-wrapper').append(keepTrackApi.html(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n        <ul id=\\\"nav-mobile\\\">\\n          <li id=\\\"jday\\\"></li>\\n          <div id=\\\"datetime\\\" class=\\\"tooltipped\\\" data-position=\\\"top\\\" data-delay=\\\"50\\\" data-tooltip=\\\"Time Menu\\\">\\n            <div id=\\\"datetime-text\\\">Placeholder Text</div>\\n            <div id=\\\"datetime-input\\\">\\n              <form id=\\\"datetime-input-form\\\">\\n                <input type=\\\"text\\\" id=\\\"datetime-input-tb\\\" readonly=\\\"true\\\" />\\n              </form>\\n            </div>\\n          </div>\\n        </ul>\\n      \"], [\"\\n        <ul id=\\\"nav-mobile\\\">\\n          <li id=\\\"jday\\\"></li>\\n          <div id=\\\"datetime\\\" class=\\\"tooltipped\\\" data-position=\\\"top\\\" data-delay=\\\"50\\\" data-tooltip=\\\"Time Menu\\\">\\n            <div id=\\\"datetime-text\\\">Placeholder Text</div>\\n            <div id=\\\"datetime-input\\\">\\n              <form id=\\\"datetime-input-form\\\">\\n                <input type=\\\"text\\\" id=\\\"datetime-input-tb\\\" readonly=\\\"true\\\" />\\n              </form>\\n            </div>\\n          </div>\\n        </ul>\\n      \"]))));\n            $('#datetime-text').on('click', function () {\n                timeManager.propRealTime = Date.now();\n                timeManager.propTime();\n                keepTrackApi.methods.updateDateTime(new Date(timeManager.propRealTime + timeManager.propOffset));\n            });\n            $('#datetime-input-form').on('change', function (e) {\n                var selectedDate = $('#datetime-input-tb').datepicker('getDate');\n                var today = new Date();\n                var jday = timeManager.getDayOfYear(timeManager.propTime());\n                $('#jday').html(jday);\n                timeManager.propOffset = selectedDate.getTime() - today.getTime();\n                satSet.satCruncher.postMessage({\n                    typ: 'offset',\n                    dat: timeManager.propOffset.toString() + ' ' + (1.0).toString(),\n                });\n                timeManager.propRealTime = Date.now();\n                timeManager.propTime();\n                // Reset last update times when going backwards in time\n                settingsManager.lastBoxUpdateTime = timeManager.now;\n                // TODO: Migrate to watchlist.ts\n                try {\n                    keepTrackApi.programs.watchlist.lastOverlayUpdateTime = timeManager.now * 1 - 7000;\n                    uiManager.updateNextPassOverlay(true);\n                }\n                catch (_a) {\n                    // Ignore\n                }\n                // satSet.findRadarDataFirstDataTime();\n                e.preventDefault();\n            });\n            // Initialize the date/time picker\n            $('#datetime-input-tb')\n                .datetimepicker({\n                dateFormat: 'yy-mm-dd',\n                timeFormat: 'HH:mm:ss',\n                timezone: '+0000',\n                gotoCurrent: true,\n                addSliderAccess: true,\n                // minDate: -14, // No more than 7 days in the past\n                // maxDate: 14, // or 7 days in the future to make sure ELSETs are valid\n                sliderAccessArgs: { touchonly: false },\n            })\n                .on('change.dp', function () {\n                // This code gets called when the done button is pressed or the time sliders are closed\n                $('#datetime-input').fadeOut();\n                // TODO: Migrate to watchlist.ts\n                try {\n                    uiManager.updateNextPassOverlay(true);\n                }\n                catch (_a) {\n                    // Intentionally ignored\n                }\n                settingsManager.isEditTime = false;\n            });\n            $('#datetime-text').on('click', function () {\n                if (!settingsManager.isEditTime) {\n                    // $('#datetime-text').fadeOut();\n                    $('#datetime-input').fadeIn();\n                    $('#datetime-input-tb').trigger('focus');\n                    settingsManager.isEditTime = true;\n                }\n            });\n        },\n    });\n    keepTrackApi.register({\n        method: 'updateDateTime',\n        cbName: 'datetime',\n        cb: function (date) {\n            $('#datetime-input-tb').datepicker('setDate', date);\n        },\n    });\n};\nvar templateObject_1;\n"],"names":[],"sourceRoot":""}